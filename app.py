import streamlit as st
import yaml
from streamlit_webrtc import VideoProcessorBase, webrtc_streamer, WebRtcMode
from pipeline import MainProcessor

# C·∫•u h√¨nh trang
st.set_page_config(page_title="Nh·∫≠n d·∫°ng bi·ªÉn s·ªë xe", layout="wide")
st.title("üöÄ ANPR - Nh·∫≠n d·∫°ng bi·ªÉn s·ªë xe th·ªùi gian th·ª±c")
st.write("H∆∞·ªõng camera c·ªßa b·∫°n v·ªÅ ph√≠a ph∆∞∆°ng ti·ªán ƒë·ªÉ b·∫Øt ƒë·∫ßu nh·∫≠n d·∫°ng.")

# T·∫£i c·∫•u h√¨nh v√† kh·ªüi t·∫°o b·ªô x·ª≠ l√Ω
try:
    with open('config.yaml', 'r') as f:
        config = yaml.safe_load(f)
except FileNotFoundError:
    st.error("L·ªói: Kh√¥ng t√¨m th·∫•y file 'config.yaml'.")
    st.stop()

@st.cache_resource
def get_main_processor():
    """T·∫£i v√† tr·∫£ v·ªÅ instance c·ªßa b·ªô x·ª≠ l√Ω ch√≠nh."""
    return MainProcessor(config)

main_processor = get_main_processor()

# L·ªõp callback cho streamlit-webrtc ƒë·ªÉ x·ª≠ l√Ω t·ª´ng frame
class ANPRVideoProcessor(VideoProcessorBase):
    def recv(self, frame):
        # Chuy·ªÉn frame t·ª´ WebRTC th√†nh ·∫£nh OpenCV
        img = frame.to_ndarray(format="bgr24")
        
        # G·ªçi h√†m x·ª≠ l√Ω ch√≠nh t·ª´ pipeline.py
        processed_img = main_processor.process_frame(img)
        
        # Tr·∫£ v·ªÅ frame ƒë√£ x·ª≠ l√Ω ƒë·ªÉ hi·ªÉn th·ªã tr√™n tr√¨nh duy·ªát
        return frame.from_ndarray(processed_img, format="bgr24")

# Kh·ªüi ch·∫°y WebRTC streamer ƒë·ªÉ hi·ªÉn th·ªã lu·ªìng camera
webrtc_streamer(
    key="anpr-streamer",
    mode=WebRtcMode.SENDRECV,
    video_processor_factory=ANPRVideoProcessor,
    media_stream_constraints={"video": True, "audio": False},
    async_processing=True,
)

st.success("Kh·ªüi ƒë·ªông camera th√†nh c√¥ng! Ch·ªù m·ªôt l√°t ƒë·ªÉ t·∫£i model...")